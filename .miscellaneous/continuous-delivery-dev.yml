trigger: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  pipelines:
    - pipeline: continuous-integration
      source: FrontEnd/ContinuousIntegration
      project: MySite
      trigger:
        branches:
          include:
            - develop

variables:
  appServiceName: 'mysitepro'
  azureResourceServiceConnection: 'Azure Resource Manager Connection'
  imageRepository: 'mysitefrontend'
  containerRegistry: 'hasacr.azurecr.io'
  resourceGroupName: 'HasDev'
  environmentName: 'DeployDev'
  environment: 'DEV'

stages:
  - stage: Deploy
    displayName: 'Deploy to $(environment)'
    jobs:
      - deployment: Deploy
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/deploy-template.yml
                  parameters:
                    projectId: '4c1f4cba-da43-4422-a077-8b7a47bb1cf2'
                    buildPipelineId: '54'
                    appServiceName: $(appServiceName)
                    azureResourceServiceConnection: $(azureResourceServiceConnection)
                    imageRepository: $(imageRepository)
                    containerRegistry: $(containerRegistry)
                    resourceGroupName: $(resourceGroupName)

  - stage: ContinuousIntegrationMaster
    dependsOn: Deploy
    displayName: Continuous Integration Master
    jobs:
      - job: CI
        displayName: 'Continuous Integration Job'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            persistCredentials: true
            fetchDepth: 0

          - script: |
              echo "Switching to main branch"
              git checkout main
            displayName: 'Checkout Main Branch'

          - script: |
              echo "Merging develop into main"
              git merge origin/develop
            displayName: 'Merge Develop into Main'

          - script: |
              echo "Configuring Git"
              git config user.name "Henk Sandoval"
              git config user.email "henk.sandoval@outlook.com"
            displayName: 'Configure Git User'

          - script: |
              echo "Pushing changes"
              git push origin main
            displayName: 'Push Changes'
            env:
              SYSTEM_ACCESSTOKEN: $(System.AccessToken)
