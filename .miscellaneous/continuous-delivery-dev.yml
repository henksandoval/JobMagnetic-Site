trigger: none

pool:
  vmImage: 'ubuntu-latest'

resources:
  pipelines:
    - pipeline: continuous-integration
      source: FrontEnd/ContinuousIntegration
      project: MySite
      trigger:
        branches:
          include:
            - develop

variables:
  appServiceName: 'mysitepro'
  azureResourceServiceConnection: 'Azure Resource Manager Connection'
  imageRepository: 'mysitefrontend'
  containerRegistry: 'hasacr.azurecr.io'
  resourceGroupName: 'HasDev'

stages:
  - stage: Deploy
    displayName: 'Deploy to DEV'
    jobs:
      - deployment: Deploy
        environment: 'DeployDev'
        strategy:
          runOnce:
            deploy:
              steps:
                - template: templates/deploy-template.yml
                  parameters:
                    projectId: '4c1f4cba-da43-4422-a077-8b7a47bb1cf2'
                    buildPipelineId: '54'
                    appServiceName: $(appServiceName)
                    azureResourceServiceConnection: $(azureResourceServiceConnection)
                    imageRepository: $(imageRepository)
                    containerRegistry: $(containerRegistry)
                    resourceGroupName: $(resourceGroupName)

  - stage: ContinuousIntegrationMaster
    dependsOn: Deploy
    displayName: Continuous Integration Master
    jobs:
      - deployment: MergeApproval
        displayName: 'Approve and Merge to Master'
        environment: 'DeployPro'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  persistCredentials: true
                  fetchDepth: 0

                - script: |
                    echo "Switching to master branch"
                    git checkout master
                  displayName: 'Checkout Master Branch'

                - script: |
                    echo "Configuring Git"
                    git config user.name "Henk Sandoval"
                    git config user.email "henk.sandoval@outlook.com"
                  displayName: 'Configure Git User'

                - script: |
                    echo "Merging develop into master"
                    git merge origin/develop
                  displayName: 'Merge Develop into Master'

                - script: |
                    echo "Pushing changes"
                    git push origin main
                  displayName: 'Push Changes'
                  env:
                    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
