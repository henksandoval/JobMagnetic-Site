trigger:
  branches:
    exclude:
      - "*"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: SetVersion
    jobs:
      - job: GitVersion
        displayName: "Set Version"
        steps:
          - checkout: self
            clean: true
            persistCredentials: true
            fetchDepth: 0
            displayName: Disable Shallow fetch

          - task: gitversion/setup@0
            displayName: 'Install GitVersion'
            inputs:
              versionSpec: '5.x'

          - task: gitversion/execute@0
            displayName: 'Execute GitVersion'
            inputs:
              useConfigFile: true
              configFilePath: 'GitVersion.yml'

          - script: git tag $(GitVersion.NuGetVersionV2) && git push origin --tags
            displayName: 'Tag commit'

  - stage: CodeQuality
    displayName: "Code Quality and Testing"
    jobs:
      - job: RunChecks
        displayName: "Run Code Checks"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "20.x"
            displayName: "Install Node.js"

          - script: npm install
            displayName: "Install Project Dependencies"

          - script: npm run test:coverage
            displayName: "Run Unit Tests with Coverage"

          - task: SonarCloudPrepare@1
            displayName: "Prepare SonarCloud"
            inputs:
              SonarCloud: "SonarCloud Service Connection"
              organization: "hsandoval"
              scannerMode: "CLI"
              configMode: "file"
              extraProperties: |
                sonar.exclusions=**/node_modules/**,**/dist/**
                sonar.javascript.lcov.reportPaths=coverage/lcov.info

          - task: SonarCloudAnalyze@1
            inputs:
              jdkversion: "JAVA_HOME_17_X64"
            displayName: "Run SonarCloud Analyze"

          - task: SonarCloudPublish@1
            displayName: "Publish Quality Gate Result"
            inputs:
              pollingTimeoutSec: "300"

          - task: PublishTestResults@2
            displayName: "Publish Unit Test Results"
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "**/test-results/jest-junit.xml"
              mergeTestResults: true
              testRunTitle: "Unit Tests"

          - task: PublishCodeCoverageResults@2
            displayName: "Publish Unit Test Results"
            condition: succeededOrFailed()
            inputs:
              summaryFileLocation: "**/coverage/lcov.info"
